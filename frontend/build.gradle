buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "http://dl.bintray.com/kotlin/kotlin-dev" }
        maven { url 'http://dl.bintray.com/kotlin/kotlin-eap' }
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://kotlin.bintray.com/kotlinx" }
        mavenCentral()
    }
    dependencies {
        classpath "com.moowork.gradle:gradle-node-plugin:1.2.0"
        classpath "org.jetbrains.kotlin:kotlin-frontend-plugin:0.0.31"
        classpath "org.jetbrains.kotlinx:kotlinx-gradle-serialization-plugin:0.5.1"

    }
}

apply plugin: 'kotlin-platform-js'
apply plugin: 'kotlinx-serialization'
apply plugin: "kotlin2js"
apply plugin: "com.moowork.node"
apply plugin: 'org.jetbrains.kotlin.frontend'

repositories {
    maven { url "http://dl.bintray.com/kotlin/kotlin-dev" }
    maven { url "http://dl.bintray.com/kotlinx/kotlinx" }
    maven { url "http://dl.bintray.com/hypnosphi/kotlin-wrappers" }
    mavenCentral()
}

kotlinFrontend {
    downloadNodeJsVersion = 'latest'

    npm {
        dependency("react", "15.6.1")
        dependency("react-dom", "15.6.1")
    }

    webpackBundle {
        bundleName = "frontend"
        sourceMapEnabled = true
        mode = 'production'
        contentPath = file('src/main/web')
        proxyUrl = "http://localhost:8080"
    }
}

dependencies {
    expectedBy project(":common")

    compile "org.jetbrains.kotlinx:kotlinx-serialization-runtime-js:0.5.1"
    compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlinVersion"
    compile("org.jetbrains.kotlinx:kotlinx-html-js:0.6.10") { force = true }
    compile "org.jetbrains:kotlin-react:0.0.3-kotlin-1.1.50-eap-18"
    compile "org.jetbrains:kotlin-react-dom:0.0.5-kotlin-1.1.50-eap-18"
}


kotlin {
    experimental {
        coroutines "enable"
    }
}

compileKotlin2Js {
    kotlinOptions.metaInfo = true
    kotlinOptions.outputFile = "$project.buildDir.path/js/${project.name}.js"
    kotlinOptions.sourceMap = true
    kotlinOptions.moduleKind = 'commonjs'
    kotlinOptions.main = "call"
}